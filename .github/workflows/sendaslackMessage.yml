# name: Deploy app
# on: push
# jobs:
#   build:
#     name: Build App
#     runs-on:  ubuntu-latest
#     steps: 
#     - name: Post to a Slack channel
#       id: slack
#       uses: slackapi/slack-github-action@v1.21.0
#       with:
#         # Slack channel id, channel name, or user id to post message.
#         # See also: https://api.slack.com/methods/chat.postMessage#channels
#         channel-id: 'C0407413RQ8'
#         # For posting a rich message using Block Kit
#         payload: |
#           {
#             "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
#             "blocks": [
#               {
#                 "type": "section",
#                 "text": {
#                   "type": "mrkdwn",
#                   "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#                 }
#               }
#             ]
#           }
#       env:
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


name: slack-notification

on: [push]

jobs:
  slack-deploy:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made
    steps:
      - uses: actions/checkout@v2
 

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name:  Cache node modules
        id:  storeCaches
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{env.cache-name}}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install libnotify
        run: sudo apt-get install libnotify-bin

      - name: Install npm dependencies
        if: contains(steps.storeCahces.outputs, 'Cache restored successfully')
        run: npm install
      
      - name: build the project 
        run:  npm run build
      - name: Send message to Slack API
        uses: archive/github-actions-slack@v2.0.0
        id: notify
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel:  ${{ secrets.Slack_Channel }}
          slack-text: GitHub Action build result "${{ job.status }}" \n 
      - name: Result from "Send Message"
        run: echo "The result was ${{ steps.notify.outputs.slack-result }}"









