name: Full CI Workflow

on: [push]

jobs:
  Install-cacheDependencies:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made
    steps:
      - uses: actions/checkout@v2
 

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name:  Cache node modules
        id:  storeCaches
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{env.cache-name}}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install libnotify
        run: sudo apt-get install libnotify-bin

      - name: Install npm dependencies
        # if: steps.storeCaches.outputs.cache-hit != 'true'
        # if: contains(steps.storeCahces.outputs, 'Cache restored successfullysss')
        run: npm install
    

      - name: build the project 
        run:  npm run build

      
      
      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"


      - name: Send message to Slack API
        uses: archive/github-actions-slack@v2.0.0
        id: notify
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel:  ${{ secrets.Slack_Channel }}
          slack-text: GitHub Action build result "${{ job.status }}" \n 
      - name: Result from "Send Message"
        run: echo "The result was ${{ steps.notify.outputs.slack-result }}"









